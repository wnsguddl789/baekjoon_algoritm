# 스타플릿 본부가 탐사 의뢰를 받으면 현재 부두에 정박해 있는 선박 중 어떤 선박을 보낼지 결정해야 한다. 
# 그들은 현재 배에 얼마나 많은 연료가 저장되어 있는지와 배가 예상 목적지에 도착하는데 얼마나 걸리는지를 기준으로 현재 어떤 배가 탐험을 할 수 있는지를 보내기로 결정한다. 
# 선박의 연령과 현재 유지보수로 인해 각 선박은 다른 최고 속도로 주행하며 연료 소모율이 다릅니다. 각 배는 순간 최고 속도에 도달한다.

# 입력은 테스트 사례의 수를 나타내는 하나의 정수 T (1 µ T µ 50)의 선으로 시작한다. 
# 각 테스트 케이스는 두 개의 공백으로 구분된 정수 N과 D의 선으로 시작하는데, 
# 여기서 N은 도킹 베이의 선박 수를 나타내고 D는 탐사 지점까지의 거리를 광년으로 나타낸다.
# 다음으로 세 개의 공간으로 구분된 정수를 가진 N선을 따르며, 
# 여기서 vi(1 μ vi μ 1000)는 시간당 광년 단위의 선박 i의 최고 속도를 나타내고, 
# fi(1 μ fi μ 1000)는 선박 i의 연료를 중수소 킬로 단위로 나타내며, 
# ci(1 μ ci μ 1000)는 시간당 중수소 킬로 단위의 선박 i의 연료 소비를 나타낸다.

import sys

T = int(sys.stdin.readline())

for _ in range(T):
    N,D = map(int,sys.stdin.readline().split());cnt = 0
    for _ in range(N):
        v,f,c = map(int,sys.stdin.readline().split())
        if f / c * v >= D: cnt += 1

    print(cnt)